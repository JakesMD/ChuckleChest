
SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

CREATE EXTENSION IF NOT EXISTS "pg_net" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgsodium" WITH SCHEMA "pgsodium";

COMMENT ON SCHEMA "public" IS 'standard public schema';

CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";

CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgjwt" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";

CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";

SET default_tablespace = '';

SET default_table_access_method = "heap";

CREATE TABLE IF NOT EXISTS "public"."connection_avatar_urls" (
    "connection_id" bigint NOT NULL,
    "age" smallint NOT NULL,
    "avatar_url" "text" NOT NULL
);

ALTER TABLE "public"."connection_avatar_urls" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "public"."connections" (
    "id" bigint NOT NULL,
    "nickname" "text" NOT NULL,
    "date_of_birth" "date" NOT NULL
);

ALTER TABLE "public"."connections" OWNER TO "postgres";

ALTER TABLE "public"."connections" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."connections_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."gems" (
    "id" "uuid" DEFAULT "gen_random_uuid"() NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "number" smallint NOT NULL,
    "occurred_at" "date" NOT NULL
);

ALTER TABLE "public"."gems" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "public"."lines" (
    "id" bigint NOT NULL,
    "connection_id" bigint,
    "text" "text" NOT NULL,
    "gem_id" "uuid" NOT NULL
);

ALTER TABLE "public"."lines" OWNER TO "postgres";

ALTER TABLE "public"."lines" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."lines_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE ONLY "public"."connection_avatar_urls"
    ADD CONSTRAINT "connection_avatar_urls_pkey" PRIMARY KEY ("connection_id", "age");

ALTER TABLE ONLY "public"."connections"
    ADD CONSTRAINT "connections_id_key" UNIQUE ("id");

ALTER TABLE ONLY "public"."connections"
    ADD CONSTRAINT "connections_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."gems"
    ADD CONSTRAINT "gems_id_key" UNIQUE ("id");

ALTER TABLE ONLY "public"."gems"
    ADD CONSTRAINT "gems_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."lines"
    ADD CONSTRAINT "lines_id_key" UNIQUE ("id");

ALTER TABLE ONLY "public"."lines"
    ADD CONSTRAINT "lines_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."connection_avatar_urls"
    ADD CONSTRAINT "connection_avatar_urls_connection_id_fkey" FOREIGN KEY ("connection_id") REFERENCES "public"."connections"("id") ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE ONLY "public"."lines"
    ADD CONSTRAINT "lines_connection_id_fkey" FOREIGN KEY ("connection_id") REFERENCES "public"."connections"("id") ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE ONLY "public"."lines"
    ADD CONSTRAINT "lines_gem_id_fkey" FOREIGN KEY ("gem_id") REFERENCES "public"."gems"("id") ON UPDATE CASCADE ON DELETE CASCADE;

ALTER PUBLICATION "supabase_realtime" OWNER TO "postgres";

GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";

GRANT ALL ON TABLE "public"."connection_avatar_urls" TO "anon";
GRANT ALL ON TABLE "public"."connection_avatar_urls" TO "authenticated";
GRANT ALL ON TABLE "public"."connection_avatar_urls" TO "service_role";

GRANT ALL ON TABLE "public"."connections" TO "anon";
GRANT ALL ON TABLE "public"."connections" TO "authenticated";
GRANT ALL ON TABLE "public"."connections" TO "service_role";

GRANT ALL ON SEQUENCE "public"."connections_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."connections_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."connections_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."gems" TO "anon";
GRANT ALL ON TABLE "public"."gems" TO "authenticated";
GRANT ALL ON TABLE "public"."gems" TO "service_role";

GRANT ALL ON TABLE "public"."lines" TO "anon";
GRANT ALL ON TABLE "public"."lines" TO "authenticated";
GRANT ALL ON TABLE "public"."lines" TO "service_role";

GRANT ALL ON SEQUENCE "public"."lines_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."lines_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."lines_id_seq" TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "service_role";

RESET ALL;
