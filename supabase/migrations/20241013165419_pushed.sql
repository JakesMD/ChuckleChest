CREATE TYPE "public"."app_permission" AS enum(
    'chests.insert',
    'chests.select',
    'chests.update',
    'chests.delete',
    'collections.insert',
    'collections.select',
    'collections.update',
    'collections.delete',
    'people.insert',
    'people.select',
    'people.update',
    'people.delete',
    'person_avatar_urls.insert',
    'person_avatar_urls.select',
    'person_avatar_urls.update',
    'person_avatar_urls.delete',
    'gems.insert',
    'gems.select',
    'gems.update',
    'gems.delete',
    'lines.insert',
    'lines.select',
    'lines.update',
    'lines.delete',
    'invitations.insert',
    'invitations.select',
    'invitations.update',
    'invitations.delete',
    'user_roles.select',
    'user_roles.update',
    'user_roles.delete',
    'gem_share_tokens.insert',
    'gem_share_tokens.select',
    'gem_share_tokens.update',
    'gem_share_tokens.delete',
    'collection_share_tokens.insert',
    'collection_share_tokens.select',
    'collection_share_tokens.update',
    'collection_share_tokens.delete'
);

CREATE TYPE "public"."app_role" AS enum(
    'owner',
    'collaborator',
    'viewer'
);

CREATE TABLE "public"."avatars"(
    "person_id" bigint NOT NULL,
    "year" smallint NOT NULL,
    "image_url" text NOT NULL,
    "chest_id" uuid NOT NULL
);

CREATE TABLE "public"."chests"(
    "id" uuid NOT NULL DEFAULT gen_random_uuid(),
    "name" text NOT NULL DEFAULT ''::text,
    "created_by" uuid NOT NULL DEFAULT auth.uid()
);

CREATE TABLE "public"."collections"(
    "id" uuid NOT NULL DEFAULT gen_random_uuid(),
    "name" text NOT NULL DEFAULT ''::text,
    "chest_id" uuid NOT NULL
);

CREATE TABLE "public"."collection_gems"(
    "collection_id" uuid NOT NULL,
    "gem_id" uuid NOT NULL
);

CREATE TABLE "public"."gems"(
    "id" uuid NOT NULL DEFAULT gen_random_uuid(),
    "created_at" timestamp with time zone NOT NULL DEFAULT now(),
    "number" smallint NOT NULL,
    "occurred_at" date NOT NULL DEFAULT now(),
    "chest_id" uuid NOT NULL
);

CREATE TABLE "public"."invitations"(
    "chest_id" uuid NOT NULL,
    "email" text NOT NULL,
    "assigned_role" app_role NOT NULL DEFAULT 'viewer' ::app_role
);

CREATE TABLE "public"."lines"(
    "id" bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    "text" text NOT NULL,
    "gem_id" uuid NOT NULL,
    "chest_id" uuid NOT NULL,
    "person_id" bigint
);

CREATE TABLE "public"."people"(
    "id" bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    "nickname" text NOT NULL,
    "date_of_birth" date NOT NULL,
    "chest_id" uuid NOT NULL
);

CREATE TABLE "public"."role_permissions"(
    "role" app_role NOT NULL,
    "permission" app_permission NOT NULL
);

CREATE TABLE "public"."user_roles"(
    "user_id" uuid NOT NULL,
    "role" app_role NOT NULL DEFAULT 'viewer' ::app_role,
    "chest_id" uuid NOT NULL
);

CREATE TABLE "public"."users"(
    "id" uuid NOT NULL,
    "username" text
);

CREATE UNIQUE INDEX avatars_pkey ON public.avatars USING btree(person_id, year);

CREATE UNIQUE INDEX chests_pkey ON public.chests USING btree(id);

CREATE UNIQUE INDEX collection_gems_pkey ON public.collection_gems USING btree(collection_id, gem_id);

CREATE UNIQUE INDEX collections_pkey ON public.collections USING btree(id);

CREATE UNIQUE INDEX connections_id_key ON public.people USING btree(id);

CREATE UNIQUE INDEX connections_pkey ON public.people USING btree(id);

CREATE UNIQUE INDEX gems_id_key ON public.gems USING btree(id);

CREATE UNIQUE INDEX gems_pkey ON public.gems USING btree(id);

CREATE UNIQUE INDEX invitations_pkey ON public.invitations USING btree(chest_id, email);

CREATE UNIQUE INDEX lines_id_key ON public.lines USING btree(id);

CREATE UNIQUE INDEX lines_pkey ON public.lines USING btree(id);

CREATE UNIQUE INDEX role_permissions_pkey ON public.role_permissions USING btree(ROLE, permission);

CREATE UNIQUE INDEX user_roles_pkey ON public.user_roles USING btree(user_id, chest_id);

CREATE UNIQUE INDEX users_pkey ON public.users USING btree(id);

ALTER TABLE "public"."avatars"
    ADD CONSTRAINT "avatars_pkey" PRIMARY KEY USING INDEX "avatars_pkey";

ALTER TABLE "public"."chests"
    ADD CONSTRAINT "chests_pkey" PRIMARY KEY USING INDEX "chests_pkey";

ALTER TABLE "public"."collection_gems"
    ADD CONSTRAINT "collection_gems_pkey" PRIMARY KEY USING INDEX "collection_gems_pkey";

ALTER TABLE "public"."collections"
    ADD CONSTRAINT "collections_pkey" PRIMARY KEY USING INDEX "collections_pkey";

ALTER TABLE "public"."gems"
    ADD CONSTRAINT "gems_pkey" PRIMARY KEY USING INDEX "gems_pkey";

ALTER TABLE "public"."invitations"
    ADD CONSTRAINT "invitations_pkey" PRIMARY KEY USING INDEX "invitations_pkey";

ALTER TABLE "public"."lines"
    ADD CONSTRAINT "lines_pkey" PRIMARY KEY USING INDEX "lines_pkey";

ALTER TABLE "public"."people"
    ADD CONSTRAINT "connections_pkey" PRIMARY KEY USING INDEX "connections_pkey";

ALTER TABLE "public"."role_permissions"
    ADD CONSTRAINT "role_permissions_pkey" PRIMARY KEY USING INDEX "role_permissions_pkey";

ALTER TABLE "public"."user_roles"
    ADD CONSTRAINT "user_roles_pkey" PRIMARY KEY USING INDEX "user_roles_pkey";

ALTER TABLE "public"."users"
    ADD CONSTRAINT "users_pkey" PRIMARY KEY USING INDEX "users_pkey";

ALTER TABLE "public"."avatars"
    ADD CONSTRAINT "connection_avatar_urls_connection_id_fkey" FOREIGN KEY (person_id) REFERENCES people(id) ON UPDATE CASCADE ON DELETE CASCADE NOT valid;

ALTER TABLE "public"."avatars" validate CONSTRAINT "connection_avatar_urls_connection_id_fkey";

ALTER TABLE "public"."avatars"
    ADD CONSTRAINT "person_avatar_urls_chest_id_fkey" FOREIGN KEY (chest_id) REFERENCES chests(id) ON UPDATE CASCADE ON DELETE CASCADE NOT valid;

ALTER TABLE "public"."avatars" validate CONSTRAINT "person_avatar_urls_chest_id_fkey";

ALTER TABLE "public"."chests"
    ADD CONSTRAINT "chests_created_by_fkey" FOREIGN KEY (created_by) REFERENCES users(id) ON UPDATE CASCADE ON DELETE CASCADE NOT valid;

ALTER TABLE "public"."chests" validate CONSTRAINT "chests_created_by_fkey";

ALTER TABLE "public"."collection_gems"
    ADD CONSTRAINT "collection_gems_collection_id_fkey" FOREIGN KEY (collection_id) REFERENCES collections(id) ON UPDATE CASCADE ON DELETE CASCADE NOT valid;

ALTER TABLE "public"."collection_gems" validate CONSTRAINT "collection_gems_collection_id_fkey";

ALTER TABLE "public"."collection_gems"
    ADD CONSTRAINT "collection_gems_gem_id_fkey" FOREIGN KEY (gem_id) REFERENCES gems(id) ON UPDATE CASCADE ON DELETE CASCADE NOT valid;

ALTER TABLE "public"."collection_gems" validate CONSTRAINT "collection_gems_gem_id_fkey";

ALTER TABLE "public"."collections"
    ADD CONSTRAINT "collections_chest_id_fkey" FOREIGN KEY (chest_id) REFERENCES chests(id) ON UPDATE CASCADE ON DELETE CASCADE NOT valid;

ALTER TABLE "public"."collections" validate CONSTRAINT "collections_chest_id_fkey";

ALTER TABLE "public"."gems"
    ADD CONSTRAINT "gems_chest_id_fkey" FOREIGN KEY (chest_id) REFERENCES chests(id) ON UPDATE CASCADE ON DELETE CASCADE NOT valid;

ALTER TABLE "public"."gems" validate CONSTRAINT "gems_chest_id_fkey";

ALTER TABLE "public"."gems"
    ADD CONSTRAINT "gems_id_key" UNIQUE USING INDEX "gems_id_key";

ALTER TABLE "public"."invitations"
    ADD CONSTRAINT "invitations_chest_id_fkey" FOREIGN KEY (chest_id) REFERENCES chests(id) ON UPDATE CASCADE ON DELETE CASCADE NOT valid;

ALTER TABLE "public"."invitations" validate CONSTRAINT "invitations_chest_id_fkey";

ALTER TABLE "public"."lines"
    ADD CONSTRAINT "lines_chest_id_fkey" FOREIGN KEY (chest_id) REFERENCES chests(id) ON UPDATE CASCADE ON DELETE CASCADE NOT valid;

ALTER TABLE "public"."lines" validate CONSTRAINT "lines_chest_id_fkey";

ALTER TABLE "public"."lines"
    ADD CONSTRAINT "lines_gem_id_fkey" FOREIGN KEY (gem_id) REFERENCES gems(id) ON UPDATE CASCADE ON DELETE CASCADE NOT valid;

ALTER TABLE "public"."lines" validate CONSTRAINT "lines_gem_id_fkey";

ALTER TABLE "public"."lines"
    ADD CONSTRAINT "lines_id_key" UNIQUE USING INDEX "lines_id_key";

ALTER TABLE "public"."lines"
    ADD CONSTRAINT "lines_person_id_fkey" FOREIGN KEY (person_id) REFERENCES people(id) ON UPDATE CASCADE ON DELETE CASCADE NOT valid;

ALTER TABLE "public"."lines" validate CONSTRAINT "lines_person_id_fkey";

ALTER TABLE "public"."people"
    ADD CONSTRAINT "connections_id_key" UNIQUE USING INDEX "connections_id_key";

ALTER TABLE "public"."people"
    ADD CONSTRAINT "people_chest_id_fkey" FOREIGN KEY (chest_id) REFERENCES chests(id) ON UPDATE CASCADE ON DELETE CASCADE NOT valid;

ALTER TABLE "public"."people" validate CONSTRAINT "people_chest_id_fkey";

ALTER TABLE "public"."user_roles"
    ADD CONSTRAINT "user_roles_chest_id_fkey" FOREIGN KEY (chest_id) REFERENCES chests(id) ON UPDATE CASCADE ON DELETE CASCADE NOT valid;

ALTER TABLE "public"."user_roles" validate CONSTRAINT "user_roles_chest_id_fkey";

ALTER TABLE "public"."user_roles"
    ADD CONSTRAINT "user_roles_user_id_fkey" FOREIGN KEY (user_id) REFERENCES auth.users(id) ON UPDATE CASCADE ON DELETE CASCADE NOT valid;

ALTER TABLE "public"."user_roles" validate CONSTRAINT "user_roles_user_id_fkey";

ALTER TABLE "public"."user_roles"
    ADD CONSTRAINT "user_roles_user_id_fkey1" FOREIGN KEY (user_id) REFERENCES users(id) ON UPDATE CASCADE ON DELETE CASCADE NOT valid;

ALTER TABLE "public"."user_roles" validate CONSTRAINT "user_roles_user_id_fkey1";

ALTER TABLE "public"."users"
    ADD CONSTRAINT "users_id_fkey" FOREIGN KEY (id) REFERENCES auth.users(id) ON UPDATE CASCADE ON DELETE CASCADE NOT valid;

ALTER TABLE "public"."users" validate CONSTRAINT "users_id_fkey";

